<template>
  <view class="container">
    <view class="carsbox">
      <view class="vbox">
        <view class="vbox-title">
          <text class="t">请上传车辆行驶证进行车辆认证</text>
        </view>
        <view class="type">
          <text>车辆类型</text>
          <view>
            <text class="{{type === 0 ? 'selected':''}}" data-index="0" @tap="switchType">个人车辆</text>
            <text class="{{type === 1 ? 'selected':''}}" data-index="1" @tap="switchType">企业车辆</text>
          </view>
        </view>
        <view class="vbox-list">
          <view @tap="chooseImage" class="uploadbox" data-id="drivingLicence" data-type="0">
            <block wx:if="{{!drivingLicence}}">
              <image class="camera" src="../../wximages/vl1.png" mode="scaleToFill">
            </block>
            <block wx:else>
              <image class="l" src="{{drivingLicence}}" mode="scaleToFill">
            </block>
          </view>
          <view @tap="chooseImage" class="uploadbox" data-id="vehicleLicence" data-type="1">
            <block wx:if="{{!vehicleLicence}}">
              <image class="camera" src="../../wximages/vl2.png" mode="scaleToFill">
            </block>
            <block wx:else>
              <image class="l" src="{{vehicleLicence}}" mode="scaleToFill">
            </block>
          </view>
        </view>
      </view>
      <view class="vbox" wx:if="{{showCarsMsg}}">
        <view class="input-wrapper">
          <view class="input-item">
            <text>车主姓名</text>
            <input value="{{carName}}" bindinput="inputValueChange">
            <!-- <textarea value="{{faceObj.owner}}" bindinput="inputValueChange" data-type="0" data-key="owner" placeholder-class="placeholder-class" auto-height/> -->
          </view>
          <view class="input-item iconfont {{personIndex === 0 ? 'error':''}}">
            <text>核载人数</text>
            <picker
              bindchange="bindPersonsCapacityPickerChange"
              value="{{personIndex}}"
              range="{{personsArr}}"
            >
              <view class="persons">{{personsArr[personIndex]}}{{personIndex !== 0?'人':''}}</view>
            </picker>
          </view>
          <!-- <view class="input-item">
            <text>车牌号码</text>
            <input value="{{faceObj.numberPlates}}" bindinput="inputValueChange" data-type="0" data-key="numberPlates" placeholder-class="placeholder-class"/>
          </view> -->
          <car-number :motors.sync="motors" :nweType.sync="nweType"></car-number>
        </view>
      </view>
    </view>
    <view class="btnbox">
      <button
        @tap="toNext"
        class="btn btn-large btn-success"
        disabled="{{!vehiclePhotos || !vehicleLicence || !drivingLicence}}"
      >提交认证</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import base from '@/mixins/base.js';
  import http from '@/mixins/http.js';
  import { service } from '@/config.js';
  import carNumber from '@/components/carnumber';

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '新增车辆'
    }
    components = {
      'car-number': carNumber
    }

    mixins = [base, http]

    data = {
      isnext: 0,
      plateno: '新T77777',
      vehiclePhotos: '',
      vehicleLicence: '',
      drivingLicence: '',
      carName: '新车',
      motors: '',
      nweType: 0,
      type: 0,
      personIndex: 3,
      personsArr: ['请选择核载人数', 2, 4, 5, 6, 7],
      showCarsMsg: true
    }

    computed = {
    }

    methods = {
      toNext() {
        this.$post({
          url: service.certification,
          data: {
            plateNo: this.plateno,
            vehiclePhotos: this.vehiclePhotos,
            vehicleLicence: this.vehicleLicence,
            drivingLicence: this.drivingLicence
          }
        }, {
          success: (data) => {
            wx.redirectTo({
              url: 'cars_index'
            });
          },
          fail: (data) => {
            wx.showModal({
              title: '提示',
              content: data.resMsg,
              showCancel: false
            });
          }
        });
      },
      upload(e) {
        let that = this;
        let id = e.currentTarget.dataset.id;
        wx.chooseImage({
          count: 1,
          success (res) {
            const tempFilePaths = res.tempFilePaths;
            wx.uploadFile({
              url: service.upload,
              filePath: tempFilePaths[0],
              name: 'file',
              formData: {},
              success: (res) => {
                res = JSON.parse(res.data);
                if (res.resCode === '0000') {
                  setTimeout(() => {
                    that[id] = res.data.path;
                    that.$apply();
                  }, 10);
                } else {
                  wx.showModal({
                    title: '提示',
                    content: res.resMsg,
                    showCancel: false
                  });
                }
              }
            });
          }
        });
      },
      chooseImage(e) {
        let type = e.currentTarget.dataset.type;
        wx.showActionSheet({
          itemList: ['拍照', '相册选择'],
          success: (res) => {
            if (res.tapIndex === 0) {
              console.log('选择了拍照！');
              this.$goto(`/pages/addCar/cars_photo?type=${type}&title=${parseInt(type) === 0 ? '行驶证（印章页）' : '行驶证（条形页）'}`);
            } else {
              wx.chooseImage({
                count: 1,
                sizeType: ['original', 'compressed'],
                sourceType: ['album'],
                success: (res) => {
                  console.log(res);
                  //let path = res.tempFilePaths[0];
                  //this.progressPhoto(type, path);
                },
                fail: (res) => {
                  if (res.errMsg !== 'chooseImage:fail cancel') {
                  //util.showToastNoIcon('选择图片失败！');
                  }
                }
              });
            }
          }
        });
      },
      // 处理图片
      // progressPhoto(type, path) {
      //   if (wx.canIUse('compressImage')) {
      //     // 压缩图片
      //     wx.compressImage({
      //       src: path, // 图片路径
      //       //quality: app.globalData.quality, // 压缩质量
      //       success: (res) => {
      //         path = res.tempFilePath;
      //       },
      //       complete: () => {
      //         // 正面
      //         if (parseInt(type) === 0) {
      //           this.upload(path, 3, 3);
      //         } else {
      //           this.upload(path, 4, 4);
      //         }
      //       }
      //     });
      //   } else {
      //     // 正面
      //     if (parseInt(type) === 0) {
      //       this.upload(path, 3, 3);
      //     } else {
      //       this.upload(path, 4, 4);
      //     }
      //   }
      // },
      //选择车辆类型
      switchType(e) {
        this.type = parseInt(e.currentTarget.dataset['index']);
      },
      //选择车辆载人数
      bindPersonsCapacityPickerChange(e) {
        this.personIndex = parseInt(e.detail.value);
        //this.setClickEnabled();
      }
    }
    events = {
    }
    onLoad(option) {
      if (option && option.plateno) {
        this.plateno = option.plateno;
      }
    }
  }
</script>

<style lang="less" scoped>
.container{
  padding: 15px;
  .carsbox{
    background: #fff;
    padding: 15px 20px 40px;
    border-radius: 10px;
    box-shadow:0px 2px 10px 0px rgba(40, 40, 40, 0.35);
    .vbox{
      &-title {
        color: #333;
        font-size: 14px;
        .tip {
          margin-left: 20rpx;
          color: #eb6f0f;
          font-size: 12px;
        }
      }
      &-list {
        margin-top: 20rpx;
        display: flex;
        justify-content: space-between;
        width: 100%;
        .uploadbox {
          width: 49%;
          height: 200rpx;
          text-align: center;
          .camera {
            width: 100%;
            height: 100%;
          }
        }
      }
      .type {
      display: flex;
      margin-top: 20rpx;
      height: 97rpx;
      align-items: center;
      font-size: 30rpx;
      border-bottom: 1rpx solid #f2f2f2;
    }
    .type > text {
      flex: 1;
    }
    .type > view {
      display: flex;
    }
    .type > view > text {
      display: flex;
      align-items: center;
      margin-right: 42rpx;
      color: #999;
    }
      .type > view > text.selected {
        color: #333;
      }
      .type > view > text.selected::before {
        border: none;
        background: #1aad19;
      }
      .type > view > text::before {
      display: inline-block;
      margin-right: 20rpx;
      content: '';
      width: 40rpx;
      height: 40rpx;
      border-radius: 50%;
      border: 1rpx solid #c5c5c5;
      color: #ececec;
    }
    .type > view > text:last-of-type {
      margin-right: 10rpx;
    }
    .input-wrapper {
      margin-top: 20rpx;
    }
    .input-wrapper .input-item {
      position: relative;
      display: flex;
      align-items: center;
      padding: 0 6rpx;
      min-height: 97rpx;
      border-bottom: 1rpx solid #f6f6f6;
      color: #333;
      font-size: 28rpx;
      box-sizing: border-box;
    }
    .input-wrapper .input-item.error > picker {
      color: #f00;
    }
    .input-wrapper .input-item.error::after {
      color: #f00 !important;
    }
    .input-wrapper .input-item.iconfont .persons {
      margin-right: 50rpx;
    }
    .input-wrapper .input-item.iconfont::after {
      position: absolute;
      right: 0;
      font-size: 32rpx;
      content: '\e600';
      padding-right: 10rpx;
      color: #1aad19;
      pointer-events: none;
    }
    .input-wrapper .input-item:last-of-type {
      border-bottom: none;
    }
    .input-wrapper .input-item > input,
    .input-wrapper .input-item > textarea,
    .input-wrapper .input-item > picker,
    .input-wrapper .input-item > view {
      flex: 1;
      text-align: right;
    }
    .input-wrapper .input-item > textarea {
      vertical-align: center;
    }
    .input-wrapper .input-item > view {
      display: flex;
      justify-content: right;
    }
    .input-wrapper .input-item > view::before {
      content: '';
      flex: 1;
    }
    .input-wrapper .input-item > view > view {
      width: 220rpx;
      flex: 0 0 220rpx;
      display: flex;
      margin-left: 73rpx;
      align-items: center;
      justify-content: center;
      height: 80rpx;
      color: #fff;
      border-radius: 10rpx;
    }
    .input-wrapper .input-item > view > view.blue {
      background: #0c8ce6;
    }
    .input-wrapper .input-item > view > view.green {
      background: linear-gradient(to bottom, #dcf8d1, #1ea958);
    }
    }
  }
}
.tips {
  margin-top: 150rpx;
  margin-bottom: 50rpx;
  text-align: center;
  font-size: 10px;
  color: #cfcfcf;
  .l2 {
    margin-top: 40rpx;
    display: flex;
    justify-content: center;
    text-align: center;
    .tt {
      margin: 0 40rpx;
    }
    .i {
      width: 80rpx;
      height: 80rpx;
      margin-bottom: 20rpx;
    }
  }
}
.btnbox {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 750rpx;
  .btn {
    width: 650rpx;
    height: 100rpx;
    line-height: 100rpx;
    font-size: 14px;
  }
}

</style>
