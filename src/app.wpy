<style lang='less'>
@import "./styles/custom/index.less";
@import "./fonts/iconfont.wxss";
@import "../node_modules/kai-ui/src/less/index";

/*使用iconfont*/
.iconfont {
  font-family: "iconfont";
  font-size: 28rpx;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: 0.01px;
  -moz-osx-font-smoothing: grayscale;
  color: #333;
}
.btn-success {
  background-color: @uiButton;
}
</style>

<script>
import wepy from "wepy";
import "wepy-async-function";
import { service } from "./config";
import { setStore } from "wepy-redux";
import configStore from "./store";
import http from "@/mixins/http.js";

const store = configStore();
setStore(store);

export default class extends wepy.app {
  config = {
    pages: [
      "pages/index/index",
      "pages/vetc/vetc",
      "pages/usercenter/index",
      "pages/addCar/cars_add",
      "pages/addCar/cars_photo",
      "pages/bill/bill",
      "pages/breakRules/breakRules",
      "pages/breakRules/detail",
      "pages/cardBag/cardBag",
      "pages/faq/FAQ",
      "pages/feedback/feedback",
      "pages/map/map",
      "pages/myCar/myCar",
      "pages/notice/notice",
      "pages/qa/ask",
      "pages/vip/vip",
      "pages/washCar/list",
      "pages/washCar/detail",
      "pages/driver/driver",
      "pages/addoil/addoil",
      "pages/video/video"
    ],
    // tabBar: {
    //   color: "#999",
    //   selectedColor: "#00AE57",
    //   borderStyle: "white",
    //   list: [
    //     {
    //       pagePath: "pages/index/index",
    //       text: "首页",
    //       iconPath: "./wximages/logo-1.png",
    //       selectedIconPath: "./wximages/logo-1-active.png"
    //     },
    //     {
    //       pagePath: "pages/vetc/vetc",
    //       text: "申办微ETC",
    //       iconPath: "./wximages/logo-2.png",
    //       selectedIconPath: "./wximages/logo-2-active.png"
    //     },
    //     {
    //       pagePath: "pages/usercenter/index",
    //       text: "我的",
    //       iconPath: "./wximages/logo-3.png",
    //       selectedIconPath: "./wximages/logo-3-active.png"
    //     }
    //   ]
    // },
    window: {
      backgroundColor: "#F3F4F6",
      backgroundTextStyle: "light",
      navigationBarBackgroundColor: "#03CB65",
      navigationBarTitleText: "高速通行",
      navigationBarTextStyle: "white",
      enablePullDownRefresh: false
    },
    networkTimeout: {
      request: 5000,
      downloadFile: 10000
    },
    debug: true,
    navigateToMiniProgramAppIdList: [
      "wxbd687630cd02ce1d",
      "wx519ba1e247434af1",
      "wxf027cc32bfa26828"
    ],
    permission: {
      "scope.userLocation": {
        desc: "位置信息仅用于确认权益信息"
      }
    }
  };

  mixins = [http];

  globalData = {
    userInfo: {
      nickName: "test",
      avatarUrl: "test",
      openId: ""
    },
    token: null,
    tabBar: [
      {
        current: 0,
        pagePath: "pages/index/index",
        iconPath: "../../wximages/logo-1.png",
        selectedIconPath: "../../wximages/logo-1-active.png",
        text: "首页"
      },
      {
        current: 0,
        pagePath: "pages/vetc/vetc",
        iconPath: "../../wximages/logo-2.png",
        selectedIconPath: "../../wximages/logo-2-active.png",
        text: "申办微ETC"
      },
      {
        current: 0,
        pagePath: "pages/usercenter/index",
        iconPath: "../../wximages/logo-3.png",
        selectedIconPath: "../../wximages/logo-3-active.png",
        text: "我的"
      }
    ]
  };

  tabbarmain(bindName = "tabdata", id, target) {
    var that = target;
    var bindData = {};
    var otabbar = this.globalData.tabBar;
    otabbar.forEach((item, index) => {
      if (id === index) {
        otabbar[id].current = 1;
      } else {
        otabbar[index].current = 0;
      }
    });
    bindData[bindName] = otabbar;
    that.$apply();
    // return bindData;
    return this.globalData.tabBar;
  }

  constructor() {
    super();
    this.use("requestfix");
  }

  freepayCallbackSuccess(id, $e) {
    const request = {
      url: service.freepaynot,
      method: "POST",
      data: {
        contract_id: id
      },
      header: {
        Authorization: wx.getStorageSync("token")
      }
    };

    wepy.request(
      Object.assign(request, {
        success: ({ statusCode, data }) => {
          if (data.resCode === "0000") {
            wx.showModal({
              title: "提示",
              content: "签约成功",
              showCancel: false
            });
            wx.redirectTo({
              url: "itcpay_binding"
            });
          } else {
            wx.showModal({
              title: "提示",
              content: data.resMsg,
              showCancel: false
            });
          }
        },
        fail: ({ statusCode, data }) => {
          wx.showModal({
            title: "提示",
            content: data.resMsg,
            showCancel: false
          });
        }
      })
    );
  }

  freepayCallbackError($e) {
    wx.showModal({
      title: "提示",
      content: "签约失败",
      showCancel: false
    });
  }

  onShow(res) {
    if (res.scene === 1038) {
      const { appId, extraData } = res.referrerInfo;
      if (appId === "wxbd687630cd02ce1d") {
        if (typeof extraData === "undefined") {
          this.freepayCallbackError();
          return;
        }
        if (extraData.return_code === "SUCCESS") {
          var contractId = extraData.contract_id;
          this.freepayCallbackSuccess(contractId);
        } else {
          this.freepayCallbackError();
        }
      }
    }
  }

  onLaunch() {
    const that = this;
    wx.login({
      success(res) {
        if (res.code) {
          const request = {
            url: service.login,
            method: "POST",
            data: {
              Logincode: res.code
            }
          };

          wepy.request(
            Object.assign(request, {
              success: ({ statusCode, data }) => {
                if (data.resCode === "0000") {
                  that.globalData.token = data.data.token;
                  wx.setStorageSync("token", data.data.token);
                } else {
                  wx.showModal({
                    title: "提示",
                    content: "服务器发生错误，请联系管理员",
                    showCancel: false
                  });
                }
              },
              fail: ({ statusCode, data }) => {
                console.log("login failed");
              }
            })
          );
        }
      }
    });
  }

  getUserInfo(cb) {
    const that = this;
    if (this.globalData.userInfo) {
      return this.globalData.userInfo;
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo;
        cb && cb(res.userInfo);
      }
    });
  }

  isObject(item) {
    return typeof item === "object" && !this.isArray(item);
  }

  isArray(item) {
    return Object.prototype.toString.apply(item) === "[object Array]";
  }

  isUndefined(item) {
    return typeof item === "undefined";
  }
}
</script>
